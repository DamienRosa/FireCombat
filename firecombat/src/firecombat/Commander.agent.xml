<?xml version="1.0" encoding="UTF-8"?>
<!--
  <H3>Comander Agent.</H3>
  It has a fixed position and it gives the orders
  to extinguish the fire.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.2.xsd"
	name="Commander"
	package="firecombat">

	<imports>
		<import>jadex.commons.future.*</import>
		<import>jadex.base.contextservice.*</import>
		<import>jadex.base.appdescriptor.*</import>
		<import>jadex.extension.envsupport.environment.space2d.*</import>
		<import>jadex.extension.envsupport.environment.*</import>
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.bridge.IContextService</import>
		<import>java.util.Arrays</import>
	</imports>

	<beliefs>
		<!-- Environment. -->
		<belief name="env" class="Grid2D">
			<fact class="IFuture">$scope.getParentAccess().getExtension("mygc2dspace")</fact>
		</belief>
			
		<!-- Myself. -->
		<belief name="myself" class="ISpaceObject">
			<fact>$beliefbase.env.getAvatar($scope.getComponentDescription(), $scope.getAgentModel().getFullName())</fact>
		</belief>
	
		<!-- The actual position on the grid world. -->
		<belief name="position" class="IVector2" evaluationmode="push">
			<fact language="jcl">
				$beliefbase.myself.position
				//$beliefbase.myself.getProperty("position")
			</fact>
		</belief>
		
		<!-- Wind velocity -->
		<belief name="wind_speed" class="IVector2" evaluationmode="push">
			<fact language="jcl">
				$beliefbase.myself.position
				//$beliefbase.myself.getProperty("position")
			</fact>
		</belief>
		
		<!-- Wind orientation -->
		<belief name="wind_orientation" class="IVector2" evaluationmode="push">
			<fact language="jcl">
				$beliefbase.myself.position
				//$beliefbase.myself.getProperty("position")
			</fact>
		</belief>
		
		<!-- The soldier at his current position. -->
		<beliefset name="soldiers_position" class="ISpaceObject"/>
		
		<!-- The fire at its current position. -->
		<beliefset name="fire_position" class="ISpaceObject"/>
		
		<beliefset name="vegetation_state" class="ISpaceObject"/>
	</beliefs>

	<goals>
		<!-- The burn waste goal. For every garbage occurring at
			its position a new goal is craeted (see binding).
 			The unique tag avoids creating more than one goal
 			per specific piece of garbage. -->
		<achievegoal name="burn">
			<parameter name="garbage" class="ISpaceObject">
				<value>$garbage</value>
			</parameter>
			<unique/>
			<creationcondition language="jcl">
				ISpaceObject $garbage &amp;&amp; Arrays.asList($beliefbase.garbages).contains($garbage)
			</creationcondition>
			<deliberation cardinality="1"/>
		</achievegoal>

		<!-- The goal for picking up waste. Tries endlessly to pick up. -->
		<achievegoal name="pick" exclude="never"/>
	</goals>

	<plans>
		<!-- Plan for burning garbage. -->
		<plan name="burn_plan">
			<body class="BurnPlanEnv"/>
			<trigger>
				<goal ref="burn"/>
			</trigger>
		</plan>

		<!-- Plan for trying to pick up waste. -->
		<plan name="pickup_plan">
			<body class="PickUpPlanEnv"/>
			<trigger>
				<goal ref="pick"/>
			</trigger>
		</plan>
	</plans>
</agent>